import discord
from discord.ext import commands
from discord.ext.commands import Bot
import failures
import asyncio, os, datetime

# import pymongo

# from help.db_worker import cluster
started_at = datetime.datetime.utcnow()

def prefix(client, message):
    p = ["?", "!"]
    if client.user.id == 582881093154504734:
        p = ".."
    return p

intents = discord.Intents.all()
client = commands.Bot(command_prefix=prefix, intents=intents)
client.remove_command("help")

token = str(os.environ.get("bot_token"))

#========== Functions ===========
from functions import display_perms, vis_aliases, visual_delta, owner_ids, find_alias, quote_list, is_command

def has_instance(_list, _class):
    has = False
    for elem in _list:
        if isinstance(elem, _class):
            has = True
            break
    return has

#=========== Events ============
@client.event
async def on_ready():
    print(
        f"User: {client.user}\n"
        f"Now: {datetime.datetime.now()}\n"
        "Loading cogs...\n"
    )

#========== Commands ============
@commands.is_owner()
@client.command()
async def test(ctx, *, text):
    await ctx.send(is_command(client, ctx.prefix, text))


@client.command(aliases=["lo"])
async def logout(ctx):
    if ctx.author.id in owner_ids:
        await ctx.send(f"```>>> Logging out...```")
        await client.logout()


@commands.is_owner()
@client.command()
async def execute(ctx, *, code):
    sep = "# CODE INSERTION"

    if code.startswith("py"):
        code = code[2:]
    code = "    " * 3 + code.strip("```")
    code = code.replace("\n", "\n" + 3 * "    ")

    cog_code = open("cogs/ghost_cog.py", "r", encoding="utf-8").read()
    start, smth = cog_code.split(sep, maxsplit=1)
    smth, end = smth.rsplit(sep, maxsplit=1)
    del smth
    cog_code = start + sep + "\n" + code + "\n" + sep + end
    with open("cogs/ghost_cog.py", "w", encoding="utf-8") as f:
        f.write(cog_code)
    
    try:
        client.reload_extension("cogs.ghost_cog")
        await ctx.send("```>> Ghost cog is ready```")
    except Exception as e:
        await ctx.send(f"```>> Cog failed: {e}```")


@client.command()
async def ping(ctx):
    await ctx.send(f"{ctx.author.mention}, pong")


@commands.cooldown(1, 1, commands.BucketType.member)
@client.command()
async def help(ctx, *, section=None):
    p = ctx.prefix
    sections = {
        "settings": ["–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"],
        #"moderation": ["–º–æ–¥–µ—Ä–∞—Ü–∏—è"],
        "economy": ["—ç–∫–æ–Ω–æ–º–∏–∫–∞"],
        #"games": ["–∏–≥—Ä—ã", "–∫–∞–∑–∏–Ω–æ"],
        "forms": ["—Ñ–æ—Ä–º—ã", "–∞–Ω–∫–µ—Ç—ã"],
        "utils": ["utilities", "—É—Ç–∏–ª–∏—Ç—ã"],
        "voices": ["–ø—Ä–∏–≤–∞—Ç—ã", "–≤–æ–π—Å—ã"]
        #"brawlstars": ["brawl", "bs", "–±—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å", "–±—Å", "brawl stars"]
    }
    titles = {
        "settings": "–û –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö",
        #"moderation": "–û –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
        "economy": "–û–± —ç–∫–æ–Ω–æ–º–∏–∫–µ",
        #"games": "–û–± –∏–≥—Ä–∞—Ö",
        "forms": "–û–± –∞–Ω–∫–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞",
        "utils": "–û –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö",
        "voices": "–û –ø—Ä–∏–≤–∞—Ç–∞—Ö"
        #"brawlstars": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Brawl Stars"
    }
    desc = ""
    for sec in titles:
        desc += f"`{p}help {sec}` - {titles[sec]}\n"
    if section is None:
        reply = discord.Embed(
            title="üìñ –ú–µ–Ω—é –ø–æ–º–æ—â–∏",
            description=f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å:\n\n{desc}",
            color=ctx.guild.me.color
        )
        reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        await ctx.send(embed=reply)
    
    else:
        section = find_alias(sections, section)
        if section is None:
            reply = discord.Embed(
                title="üîé –†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                description=f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ `{p}help`"
            )
            reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)
        
        else:
            text = open(f"help/{section}.txt", "r", encoding="utf8").read()
            text = text.replace("{p}", p)

            reply = discord.Embed(
                title=f"üìã {titles[section]}",
                description=(
                    f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–µ: `{p}–∫–æ–º–∞–Ω–¥–∞`\n\n"
                    f"{text}"
                ),
                color=ctx.guild.me.color
            )
            reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)


@commands.cooldown(1, 1, commands.BucketType.member)
@client.command(aliases=["bot-stats", "bs", "bot-info", "bi"])
async def stats(ctx):
    uptime = datetime.datetime.utcnow() - started_at
    total_members = 0
    total_servers = 0
    
    for guild in client.guilds:
        total_members += guild.member_count
        total_servers += 1
    
    reply = discord.Embed(
        title="üåç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞",
        color=discord.Color.blue()
    )
    reply.add_field(name="üóÇ –°–µ—Ä–≤–µ—Ä–æ–≤", value=f"> {total_servers}", inline=False)
    reply.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=f"> {total_members}", inline=False)
    reply.add_field(name="üïë –ê–ø—Ç–∞–π–º", value=f"> {visual_delta(uptime)}")
    reply.add_field(name="üõ∞ –ü–∏–Ω–≥", value=f"> {client.latency * 1000:.0f}", inline=False)
    reply.set_thumbnail(url=str(client.user.avatar_url))
    await ctx.send(embed=reply)

#========== Errors ============
@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        cool_notify = discord.Embed(
            title='‚è≥ –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è',
            description = f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {visual_delta(int(error.retry_after))}"
        )
        cool_notify.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        await ctx.send(embed=cool_notify)
    
    elif isinstance(error, commands.BadArgument):
        kw, search, rest = str(error).split('"', maxsplit=2)
        kw = kw.lower().strip()
        search = search.strip()
        
        del rest
        if "convert" in kw:
            kw = search
        translations = {
            "user": f"–ü–æ –∑–∞–ø—Ä–æ—Å—É {search} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
            "member": f"–ü–æ –∑–∞–ø—Ä–æ—Å—É {search} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
            "role": f"–ü–æ –∑–∞–ø—Ä–æ—Å—É {search} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ —Ä–æ–ª–µ–π.",
            "channel": f"–ü–æ –∑–∞–ø—Ä–æ—Å—É {search} –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤.",
            "int": f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ."
        }
        desc = translations.get(kw, "–í–≤–µ–¥—ë–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.")

        reply = discord.Embed(
            title="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
            description=desc,
            color=discord.Color.dark_red()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        try:
            ctx.command.reset_cooldown(ctx)
        except Exception:
            pass
    
    elif isinstance(error, commands.CheckAnyFailure):
        if ctx.author.id not in owner_ids:
            if has_instance(error.errors, failures.IsNotModerator):
                reply = discord.Embed(
                    title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                    description=f"–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞:\n> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                    color=discord.Color.dark_red()
                )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed=reply)
            elif len(error.errors) > 0:
                await on_command_error(ctx, error.errors[0])
            
        else:
            try:
                await ctx.reinvoke()
            except Exception as e:
                await on_command_error(ctx, e)

    elif isinstance(error, commands.MissingPermissions):
        if ctx.author.id not in owner_ids:
            reply = discord.Embed(
                title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description=f"–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞:\n{display_perms(error.missing_perms)}",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        else:
            try:
                await ctx.reinvoke()
            except Exception as e:
                await on_command_error(ctx, e)

    elif isinstance(error, commands.CommandNotFound):
        pass
    
    elif isinstance(error, commands.MissingRequiredArgument):
        iw = str(ctx.invoked_with)
        p = ctx.prefix; cmd = ctx.command
        description = "`-`"; usage = "`-`"; brief = "`-`"; aliases = "-"
        if cmd.description != "":
            description = cmd.description
        if cmd.usage is not None:
            usage = "\n> ".join( [f"`{p}{iw} {u}`" for u in cmd.usage.split("\n")] )
        if cmd.brief is not None:
            brief = "\n> ".join( [f"`{p}{iw} {u}`" for u in cmd.brief.split("\n")] )
        if len(cmd.aliases) > 0:
            aliases = ", ".join(cmd.aliases)
        
        reply = discord.Embed(
            title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{iw}`",
            description = (
                f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {description}\n"
                f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {usage}\n"
                f"**–ü—Ä–∏–º–µ—Ä—ã:** {brief}\n\n"
                f"**–°–∏–Ω–æ–Ω–∏–º—ã:** `{aliases}`"
            )
        )
        if cmd.help is not None:          # So here I use cmd.help as an optional url holder
            reply.set_image(url=cmd.help) # Ok? So don't forget please
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        try:
            ctx.command.reset_cooldown(ctx)
        except Exception:
            pass

    elif isinstance(error, failures.CooldownResetSignal):
        try:
            ctx.command.reset_cooldown(ctx)
        except Exception:
            pass

    else:
        print(error)

#========== Extensions =========

for file_name in os.listdir("./cogs"):
    if file_name.endswith(".py"):
        try:
            client.load_extension(f"cogs.{file_name[:-3]}")
        except Exception as e:
            print(f"--> Cog not loaded: {e}")

client.run(token)