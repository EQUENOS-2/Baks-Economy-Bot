import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio, os, datetime

# import pymongo

# from box.db_worker import cluster
from functions import visual_delta, owner_ids, find_alias

client = commands.Bot(command_prefix="?")
client.remove_command("help")

token = str(os.environ.get("bot_token"))

#=========== Events ============
@client.event
async def on_ready():
    print(
        f"User: {client.user}\n"
        f"Now: {datetime.datetime.now()}\n"
        "Loading cogs...\n"
    )

#========== Commands ============
@client.command(aliases=["lo"])
async def logout(ctx):
    if ctx.author.id in owner_ids:
        print([c.name for c in client.commands])
        await ctx.send(f"```>>> Logging out...```")
        await client.logout()

@commands.cooldown(1, 1, commands.BucketType.member)
@client.command()
async def help(ctx, *, section=None):
    p = ctx.prefix
    sections = {
        "settings": ["settings", "s", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "–Ω"],
        "economy": ["economy", "e", "—ç–∫–æ–Ω–æ–º–∏–∫–∞", "—ç"],
        "games": ["games", "g", "–∏–≥—Ä—ã", "–∏", "–∫–∞–∑–∏–Ω–æ"],
        "forms": ["forms", "f", "—Ñ–æ—Ä–º—ã", "–∞–Ω–∫–µ—Ç—ã"],
        "utils": ["utils", "utilities", "—É—Ç–∏–ª–∏—Ç—ã"]
    }
    titles = {
        "settings": "–û –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö",
        "economy": "–û–± —ç–∫–æ–Ω–æ–º–∏–∫–µ",
        "games": "–û–± –∏–≥—Ä–∞—Ö",
        "forms": "–û–± –∞–Ω–∫–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞",
        "utils": "–û –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö"
    }
    if section is None:
        reply = discord.Embed(
            title="üìñ –ú–µ–Ω—é –ø–æ–º–æ—â–∏",
            description=(
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å:\n\n"
                f"`{p}help settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞\n"
                f"`{p}help economy` - —ç–∫–æ–Ω–æ–º–∏–∫–∞\n"
                f"`{p}help games` - –∏–≥—Ä—ã\n"
                f"`{p}help forms` - —Ñ–æ—Ä–º–∞/–∞–Ω–∫–µ—Ç–∞\n"
                f"`{p}help utils` - —É—Ç–∏–ª–∏—Ç—ã"
            ),
            color=ctx.guild.me.color
        )
        reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        await ctx.send(embed=reply)
    
    else:
        section = find_alias(sections, section.lower())
        if section is None:
            reply = discord.Embed(
                title="üîé –†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
                description=f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥, —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ `{p}help`"
            )
            reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)
        
        else:
            text = open(f"box/{section}.txt", "r", encoding="utf8").read()
            text = text.replace("{p}", p)

            reply = discord.Embed(
                title=f"üìã {titles[section]}",
                description=(
                    f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–µ: `{p}–∫–æ–º–∞–Ω–¥–∞`\n\n"
                    f"{text}"
                ),
                color=ctx.guild.me.color
            )
            reply.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
            await ctx.send(embed=reply)

#========== Errors ============
@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        cool_notify = discord.Embed(
            title='‚è≥ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞',
            description = f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {visual_delta(int(error.retry_after))}"
        )
        cool_notify.set_footer(text=f"{ctx.author}", icon_url=f"{ctx.author.avatar_url}")
        await ctx.send(embed=cool_notify)

#========== Extensions =========

for file_name in os.listdir("./cogs"):
    if file_name.endswith(".py"):
        client.load_extension(f"cogs.{file_name[:-3]}")

client.run(token)